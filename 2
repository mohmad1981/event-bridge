#!/bin/bash

# === Variables ===
START_TAG="v0.4.7.0"
END_TAG="v0.4.8.0"
ALL_COMMITS_FILE="all_commits.txt"
OUTPUT_FILE="jira_commit_output.txt"
GIT_LOG_FORMAT="%h|%an|%ae|%ad|%s"

echo "🔍 Getting all commits from $START_TAG to $END_TAG..."

# Make sure tags are fetched
git fetch --all --tags

# Validate both tags exist
if ! git rev-parse "$START_TAG" >/dev/null 2>&1 || ! git rev-parse "$END_TAG" >/dev/null 2>&1; then
  echo "❌ One or both tags do not exist: $START_TAG or $END_TAG"
  exit 1
fi

# === Get all commits between tags ===
git log "$START_TAG..$END_TAG" --pretty=format:"$GIT_LOG_FORMAT" > "$ALL_COMMITS_FILE"

echo "✅ All commits written to $ALL_COMMITS_FILE"

# === Optionally extract and group by JIRA (if present) ===
> "$OUTPUT_FILE"
while IFS='|' read -r HASH AUTHOR EMAIL DATE MESSAGE; do
  if [[ "$MESSAGE" =~ ([A-Z]+-[0-9]+) ]]; then
    JIRA_ID="${BASH_REMATCH[1]}"
  else
    JIRA_ID="N/A"
  fi
  echo "$JIRA_ID|$HASH|$AUTHOR|$EMAIL|$DATE|$MESSAGE" >> "$OUTPUT_FILE"
done < "$ALL_COMMITS_FILE"

# Sort the output
sort "$OUTPUT_FILE" | uniq > jira_commit_sorted.txt

echo "✅ Grouped output saved to jira_commit_sorted.txt"
